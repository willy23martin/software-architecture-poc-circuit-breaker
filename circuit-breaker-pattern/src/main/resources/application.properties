server.port=9090
spring.application.name=circuit-breaker-architectural-pattern
resilience4j.circuitbreaker.instances.CustomCircuitBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.CustomCircuitBreaker.sliding-window-size=100
resilience4j.circuitbreaker.instances.CustomCircuitBreaker.sliding-window-type=TIME_BASED
# Permitted number of calls when it is HALF_OPEN.
resilience4j.circuitbreaker.instances.CustomCircuitBreaker.permitted-number-of-calls-in-half-open-state=2
# Minimum number of calls bellow threshold before get it OPEN.
resilience4j.circuitbreaker.instances.CustomCircuitBreaker.minimum-number-of-calls=5
# Circuit will be OPEN during 5 seconds:
resilience4j.circuitbreaker.instances.CustomCircuitBreaker.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.CustomCircuitBreaker.slow-call-rate-threshold=100
resilience4j.circuitbreaker.instances.CustomCircuitBreaker.slow-call-duration-threshold=100
# Minimum number of calls above threshold before get it CLOSE.
resilience4j.circuitbreaker.instances.CustomCircuitBreaker.failure-rate-threshold=3